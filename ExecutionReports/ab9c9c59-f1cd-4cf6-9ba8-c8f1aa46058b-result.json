{"name": "test_login_without_entry_credentials", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[text()='My Account']\"}\n  (Session info: chrome=122.0.6261.112); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF69AABAD32+56930]\n\t(No symbol) [0x00007FF69AA2F632]\n\t(No symbol) [0x00007FF69A8E42E5]\n\t(No symbol) [0x00007FF69A9298ED]\n\t(No symbol) [0x00007FF69A929A2C]\n\t(No symbol) [0x00007FF69A96A967]\n\t(No symbol) [0x00007FF69A94BCDF]\n\t(No symbol) [0x00007FF69A9681E2]\n\t(No symbol) [0x00007FF69A94BA43]\n\t(No symbol) [0x00007FF69A91D438]\n\t(No symbol) [0x00007FF69A91E4D1]\n\tGetHandleVerifier [0x00007FF69AE36ABD+3709933]\n\tGetHandleVerifier [0x00007FF69AE8FFFD+4075821]\n\tGetHandleVerifier [0x00007FF69AE8818F+4043455]\n\tGetHandleVerifier [0x00007FF69AB59766+706710]\n\t(No symbol) [0x00007FF69AA3B90F]\n\t(No symbol) [0x00007FF69AA36AF4]\n\t(No symbol) [0x00007FF69AA36C4C]\n\t(No symbol) [0x00007FF69AA26904]\n\tBaseThreadInitThunk [0x00007FFABBF0257D+29]\n\tRtlUserThreadStart [0x00007FFABD3EAA58+40]", "trace": "self = <TestScripts.test_Login.TestLogin object at 0x000001C505C6F710>\n\n    def test_login_without_entry_credentials(self):\n        home_page = HomePage(self.driver)\n>       login_page = home_page.navigate_to_login_page()\n\nTestScripts\\test_Login.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObjects\\HomePage.py:32: in navigate_to_login_page\n    self.click_on_my_account_drop_menu()\nPageObjects\\HomePage.py:25: in click_on_my_account_drop_menu\n    self.element_click(\"my_account_drop_menu_xpath\", self.my_account_drop_menu_xpath)\nPageObjects\\BasePage.py:15: in element_click\n    element = self.get_element(locator_name, locator_value)\nPageObjects\\BasePage.py:37: in get_element\n    element = self.driver.find_element(By.XPATH, locator_value)\nC:\\Users\\YASH\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\YASH\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C506A494F0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF69AA26904]\\\\n\\\\tBaseThreadInitThunk [0x00007FFABBF0257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFABD3EAA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[text()='My Account']\"}\nE         (Session info: chrome=122.0.6261.112); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF69AABAD32+56930]\nE       \t(No symbol) [0x00007FF69AA2F632]\nE       \t(No symbol) [0x00007FF69A8E42E5]\nE       \t(No symbol) [0x00007FF69A9298ED]\nE       \t(No symbol) [0x00007FF69A929A2C]\nE       \t(No symbol) [0x00007FF69A96A967]\nE       \t(No symbol) [0x00007FF69A94BCDF]\nE       \t(No symbol) [0x00007FF69A9681E2]\nE       \t(No symbol) [0x00007FF69A94BA43]\nE       \t(No symbol) [0x00007FF69A91D438]\nE       \t(No symbol) [0x00007FF69A91E4D1]\nE       \tGetHandleVerifier [0x00007FF69AE36ABD+3709933]\nE       \tGetHandleVerifier [0x00007FF69AE8FFFD+4075821]\nE       \tGetHandleVerifier [0x00007FF69AE8818F+4043455]\nE       \tGetHandleVerifier [0x00007FF69AB59766+706710]\nE       \t(No symbol) [0x00007FF69AA3B90F]\nE       \t(No symbol) [0x00007FF69AA36AF4]\nE       \t(No symbol) [0x00007FF69AA36C4C]\nE       \t(No symbol) [0x00007FF69AA26904]\nE       \tBaseThreadInitThunk [0x00007FFABBF0257D+29]\nE       \tRtlUserThreadStart [0x00007FFABD3EAA58+40]\n\nC:\\Users\\YASH\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1710027557145, "stop": 1710027557159, "uuid": "6e3981f6-23c7-402a-9f0f-8b863786c185", "historyId": "33758051db42ac06aeaeda79e7436a0a", "testCaseId": "33758051db42ac06aeaeda79e7436a0a", "fullName": "TestScripts.test_Login.TestLogin#test_login_without_entry_credentials", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup_and_teardown', 'log_on_failure')"}, {"name": "parentSuite", "value": "TestScripts"}, {"name": "suite", "value": "test_Login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "LAPTOP-6QKT7AQQ"}, {"name": "thread", "value": "27060-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestScripts.test_Login"}]}